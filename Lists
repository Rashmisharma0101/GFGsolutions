# initializing lists
test_list = ["Gfg", 3, "is", 8, "Best", 10, "for", 18, "Geeks", 33]
 
# initializing key list 
key_list = ["name", "number"]

n = len(test_list)
res = []
for idx in range(0, n, 2):
    res.append({key_list[0]: test_list[idx], key_list[1] : test_list[idx + 1]})
  
# printing result 
print("The constructed dictionary list : " + str(res))

OR

l = [['a', 'b', 1, 2], ['c', 'd', 3, 4], ['e', 'f', 5, 6]]

# output -  {(‘c’, ‘d’): (3, 4), (‘e’, ‘f’): (5, 6), (‘a’, ‘b’): (1, 2)}

d = dict()

for i in l:
    d[tuple(i[:2])] = tuple(i[2:])
    
print(d)

'''Uncommon of two lists
The original list 1 : [[1, 2], [3, 4], [5, 6]]
The original list 2 : [[3, 4], [5, 7], [1, 2]]
The uncommon of two lists is : [[5, 6], [5, 7]]'''

l1 = [[1, 2], [3, 4], [5, 6]]
l2 = [[3, 4], [5, 7], [1, 2]]
l3, l5 = [], []

for i in l1:
    if i in l2 and i not in l3:
        l3.append(i)
        
#print(l3)

l4 = l1 + l2

#print(l4)

for i in l4:
    if  i in l4 and i not in l3:
        l5.append(i)
        
print(l5)

''' The original list is : [[4, 1, 6], [7, 8], [4, 10, 8]]
The reverse sorted Matrix is : [[6, 4, 1], [8, 7], [10, 8, 4]]'''

l = [[4, 1, 6], [7, 8], [4, 10, 8]]
l1  = []
for i in l:
    l1.append((sorted(i))[::-1])
    
print(l1)


'''The original list is : [[4, 5, 6], [2, 4, 5], [6, 7, 5]]
The list after pairing is : [[[4, 6], [5, 6]], [[2, 5], [4, 5]], [[6, 5], [7, 5]]]'''

from itertools import product
  
# Initializing list
test_list = [[4, 5, 6], [2, 4, 5], [6, 7, 5]]

res = []
for idx in test_list:
    res.append(list(product(idx[:-1], [idx[-1]])))
    
'''count unique values inside a list

l = [1, 2, 2, 5, 8, 4, 4, 8]
output - 5'''

l = [1, 2, 2, 5, 8, 4, 4, 8]

print(len(set(l)))

'''The original list is : [1, 3, 5, 6, 3, 5, 6, 1]
Duplication removal list product : 90 '''

l =  [1, 3, 5, 6, 3, 5, 6, 1]
l = list(set(l))
print(l)
import math
print(math.prod(l))


'''Given a List, extract all elements whose frequency is greater than K.
Input : test_list = [4, 6, 4, 3, 3, 4, 3, 4, 3, 8], K = 3
Output : [4, 3]'''

l =  [4, 6, 4, 3, 3, 4, 3, 4, 6, 6]
k = 2
l1 = []
for i in l:
    if l.count(i) > k:
       l1.append(i)

print(list(set(l1)))

'''Test if List contains elements in Range'''

l  = [4, 5, 6, 7, 3, 9]

x, y = 3, 10

flag = True

for i in l:
    if i < x or i >= y:
        flag = False
        break
        
if flag:
    print(True)
    
else:
    print(False)
    
 '''check if the list contains three consecutive common numbers in Python
Input : [4, 5, 5, 5, 3, 8]

Output : 5

Input : [1, 1, 1, 64, 23, 64, 22, 22, 22]

Output : 1, 22 '''

l = [1, 1, 1, 64, 23, 64, 22, 22, 22]
l1 =  []
for i in range(len(l)-2):
    if l[i] == l[i+1] and l[i+1] == l[i+2]:
        l1.append(l[i])
        
print(l1)

'''Python program to find the Strongest Neighbour

Given an array arr[] of N positive integers.
 The task is to find the maximum for every adjacent pair in the array.
 
 Input: 1 2 2 3 4 5
Output: 2 2 3 4 5

Input: 5 5
Output: 5 '''

l = [1, 2, 2, 3, 4, 5]

for i in range(len(l)-1):
    if l[i+1] >= l[i]:
        print(l[i+1], end =" ")
        
 
'''Remove all the occurrences of an element from a list'''

l =  [1, 1, 2, 3, 4, 5, 1, 2, 1]
l1 = []
k = 1
for i in l:
    if i == k:
        continue
    else:
        l1.append(i)
        
print(l1)

'''remove consecutive k records

Input :
test_list = [(4, 5), (5, 6), (1, 3), (0, 0)]
K = 0
Output : [(4, 5), (5, 6), (1, 3)]'''

l = [(4, 5), (5, 6), (1, 3), (0, 0)]
l1 = []

k = 0
for (i, j) in l:
    if i == j and i == k:
        continue
    else:
        l1.append((i,j))
        
print(l1)

OR

l = [(4, 5, 6, 3), (5, 6, 6, 9), (1, 3, 5, 6), (6, 6, 7, 8)]
#The records after removal : [(4, 5, 6, 3), (1, 3, 5, 6)]
l1 = []
k = 6
for i in l:
    for j in range(len(i)-1):
        if i[j] == i[j+1] == k:
            break
        elif i[j] != i[j+1] != k and i not in l1:
            l1.append(i)
            
print(l1)
